# Copyright (c) 2014, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

aal "murphy_libresource" {
    language "python" {
        from test_mrp_libresource import *
    }

    # preview-show-vars: connected, app_classes_listed, system_resources_listed, set_created, set_acquired, set_locked, autorelease_enabled, resource_added, attributes_listed, attribute_modified
    # preview-depth: 10
    variables {
        connected, app_classes_listed, system_resources_listed, \
        set_created, set_acquired, set_locked, autorelease_enabled, \
        resource_added, attributes_listed, attribute_modified
    }

    initial_state {
        connected = False
        app_classes_listed = False
        system_resources_listed = False

        set_created = False
        set_acquired = False
        set_locked = False
        autorelease_enabled = False

        resource_added = False
        attributes_listed = False
        attribute_modified = False
    }

    # When we have no connection, we can just connect
    input "connect" {
        guard { return not connected }
        body  { connected = True }
        adapter {
            connect()
        }
    }

    # Now we have a connection
    tag "connection available" {
        guard { return connected }

        input "disconnect" {
            body {
                connected = False
                app_classes_listed = False
                system_resources_listed = False

                set_created = False
                set_acquired = False
                set_locked = False
                autorelease_enabled = False

                resource_added = False
                attributes_listed = False
                attribute_modified = False
            }
            adapter {
                disconnect()
            }
        }

        input "create_res_set" {
            guard {
                return not set_created and \
                           app_classes_listed
            }
            body { set_created = True }
            adapter {
                create_res_set()
            }
        }

        input "get_class_list" {
            guard { return not app_classes_listed }
            body { app_classes_listed = True }
            adapter {
                get_class_list()
            }
        }

        input "list_system_resources" {
            guard { return not system_resources_listed }
            body { system_resources_listed = True }
            adapter {
                list_system_resources()
            }
        }
    }

    # Now we have a resource set available
    tag "set available" {
        guard { return set_created }

        input "remove_res_set" {
            body {
                set_created = False
                set_acquired = False
                set_locked = False
                autorelease_enabled = False

                resource_added = False
                attributes_listed = False
                attribute_modified = False
            }
            adapter {
                remove_res_set()
            }
        }

        input "switch_autorelease" {
            guard { return not set_locked }
            body {
                if autorelease_enabled:
                    autorelease_enabled = False
                else:
                    autorelease_enabled = True
            }
            adapter {
                switch_autorelease(not autorelease_enabled)
            }
        }

        input "add_resource" {
            guard { return not resource_added }
            body { resource_added = True }
            adapter {
                add_resource()
            }
        }
    }

    # Now we have added a resource to our set
    tag "resource available" {
        guard { return resource_added }

        input "remove_resource" {
            guard { return not set_locked }
            body {
                resource_added = False
                attributes_listed = False
                attribute_modified = False
            }
            adapter {
                remove_resource()
            }
        }

        input "acquire_set" {
            guard { return not set_acquired }
            body {
                set_acquired = True
                set_locked = True
            }
            adapter {
                acquire_set()
            }
        }

        input "release_set" {
            body {
                set_acquired = False
                if not set_locked:
                    set_locked = True
            }
            adapter {
                release_set()
            }
        }

        input "list_attribute_names" {
            guard { return not attributes_listed }
            body {
                attributes_listed = True
            }
            adapter {
                list_attribute_names()
            }
        }

        input "modify_attribute" {
            guard { return not set_locked and \
                               attributes_listed }
            body {
                attribute_modified = True
            }
            adapter {
                modify_attribute()
            }
        }
    }
}
